{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","count","className","SearchPanel","onUpdateSearch","e","term","target","value","props","type","placeholder","autoFocus","this","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDelete","onToggleLiked","onToggleImportant","like","classNames","important","onDoubleClick","PostList","visiblePosts","elements","item","id","itemProps","PostAddForm","state","text","onValueChange","setState","onSubmit","preventDefault","onAdd","App","filterData","data","newData","checkedData","hasOwnProperty","undefined","maxId","deleteItem","elem","addItem","body","newItem","onToggle","whatIsToggled","index","findIndex","notToggledItem","toggledItem","slice","searchItems","items","indexOf","filterItems","styled","div","SearchPanelDiv","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f19b3e4c.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nconst AppHeader = ({liked, count}) => {\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-between\">\r\n            <h1>Simon Kush</h1>\r\n            <h2 className=\"text-secondary\">{`${count} at all, liked are ${liked}`}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        this.props.onUpdateSearch(term);\r\n        e.target.value = term;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Search posts...\"\r\n                autoFocus=\"autoFocus\"\r\n                value={this.props.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'like', label: 'Liked'}\r\n    ]\r\n\r\n    render() {\r\n\r\n\t\tconst buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n\t\t\tconst clazz = filter === name ? 'btn-info' : 'btn-outline-secondary'\r\n\t\t\treturn (\r\n\t\t\t\t<button type='button'\r\n\t\t\t\t \tclassName={`btn ${clazz}`}\r\n\t\t\t\t\tkey={name}\r\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>\r\n\t\t\t\t\t{label}</button>\r\n\t\t\t)\r\n\t\t});\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                    {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nconst PostListItem = ({label, onDelete, onToggleLiked, onToggleImportant, like, important}) => {\r\n    \r\n    let classNames = 'app-list-item d-flex justify-content-between';\r\n    if (important) {\r\n        classNames += ' important';\r\n    }\r\n\r\n    if (like) {\r\n        classNames += ' like';\r\n    }\r\n\r\n    return (\r\n        <div\r\n        className={classNames}\r\n        onDoubleClick={onToggleLiked}>\r\n            <span className=\"app-list-item-label\">\r\n                {label}\r\n            </span>\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}\r\n                >\r\n                    <i className=\"fa fa-star\"></i>\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}\r\n                >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n                <i className=\"fa fa-heart\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostListItem;","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item';\r\n\r\nimport './post-list.css';\r\n\r\n// create new component\r\nconst PostList = ({visiblePosts, onDelete, onToggleLiked, onToggleImportant}) => {\r\n    const elements = visiblePosts.map(item => {\r\n            const {id, ...itemProps} = item;\r\n\r\n            return (\r\n                <li \r\n                key={id} \r\n                className=\"list-group-item\">\r\n                    <PostListItem \r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    {...itemProps} />\r\n                </li>\r\n            )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nclass PostAddForm extends Component {\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    onValueChange = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            text: value\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your aims here...\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostAddForm;","import App from './app';\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport default class App extends Component {\r\n    filterData = (\r\n        data = [\r\n            {label: \"Make new posts\", important: false, like: false, id: \"aegdf\"},\r\n            {label: \"Tap on the star to make post important\", important: true, like: false, id: \"agwbd\"},\r\n            {label: \"Double tap to like\", important: false, like: true, id: \"aegraetrhanetrgdf\"},\r\n            {label: \"Add new posts\", important: true, like: true, id: \"aeggdsagfdf\"},\r\n            {label: \"Search post you need\", important: true, like: true, id: \"aeggdsff\"}\r\n        ]\r\n    ) => {\r\n        const newData = data.filter(item => typeof(item) === 'object');\r\n        const checkedData = newData.filter(item => item.hasOwnProperty('id', 'label', 'important', 'like'));\r\n        return checkedData;\r\n    }\r\n\r\n    state = {\r\n        data: this.filterData([\r\n            4,\r\n            undefined,\r\n            {label: \"Make new posts\", important: false, like: false, id: \"aegdf\"},\r\n            {label: \"Tap on the star to make post important\", important: true, like: false, id: \"agwbd\"},\r\n            {label: \"Double tap to like\", important: false, like: true, id: \"aegraetrhanetrgdf\"},\r\n            {label: \"Add new posts\", important: true, like: true, id: \"aeggdsagfdf\"},\r\n            {label: \"Search post you need\", important: true, like: true, id: \"aeggdsff\"}\r\n        ]),\r\n        term: '',\r\n        filter: 'all'\r\n    }\r\n\r\n    maxId = 1;\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const newData = data.filter(elem => elem.id !== id);\r\n            return {\r\n                data: newData\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem = (body) => {\r\n        if (body !== '') {\r\n            const newItem = {\r\n                label: body,\r\n                important: false,\r\n                like: false,\r\n                id: this.maxId++\r\n            };\r\n    \r\n            this.setState(({data}) => {\r\n                const newData = [...data, newItem];\r\n                return {\r\n                    data: newData\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onToggle = (id, whatIsToggled) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const notToggledItem = data[index];\r\n            const toggledItem = {...notToggledItem, [whatIsToggled]: !notToggledItem[whatIsToggled]};\r\n\r\n            const newData = [...data.slice(0, index), toggledItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newData\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant = (id) => {\r\n        this.onToggle(id, 'important');\r\n    } \r\n\r\n    onToggleLiked = (id) => {\r\n        this.onToggle(id, 'like');\r\n    }\r\n    //поиск строки term в каждом отдельном items[i], и возврат перебранного массива\r\n    searchItems = (items, term) => {\r\n        return items.filter(item => item.label.indexOf(term) > -1);\r\n    }\r\n\r\n    filterItems = (items, filter) => {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else if (filter === 'all') {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onUpdateSearch = (term) => {\r\n        this.setState({term});\r\n    }\r\n\r\n    onFilterSelect = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    render() {\r\n        const App = styled.div`\r\n            margin: 0 auto;\r\n            max-width: 800px;\r\n        `,\r\n        SearchPanelDiv = styled.div`\r\n            display: flex;\r\n        `;\r\n\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter(elem => elem.like).length;\r\n        const count = data.length; \r\n\r\n        const visiblePosts = this.filterItems(this.searchItems(data, term), filter);\r\n\r\n        return (\r\n            <App>\r\n                <AppHeader\r\n                    liked={liked}\r\n                    count={count}/>\r\n                <SearchPanelDiv>\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}\r\n                        term={term}\r\n                    />\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}\r\n                    />\r\n                </SearchPanelDiv>\r\n                <PostList \r\n                    visiblePosts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    />\r\n                <PostAddForm onAdd={this.addItem}/>\r\n            </App>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}